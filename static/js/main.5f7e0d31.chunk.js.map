{"version":3,"sources":["components/SearchForm/SearchForm.js","components/ResultStats/ResultStats.js","components/ItemList/ItemList.js","components/CheckSearch/CheckInput/CheckInput.js","components/CheckSearch/CheckSearchMethod.js","components/CheckSearch/CheckSearchRange.js","components/Jisho/Jisho.js","components/History/History.js","reducers/searchMethodReducer.js","reducers/searchRangeReducer.js","App.js","serviceWorker.js","index.js"],"names":["SearchForm","searchValue","setSearchValue","inputEle","startSearch","className","type","onClick","ref","name","value","onChange","e","target","placeholder","current","focus","ResultStats","props","outcome","Fragment","all","hit","ItemList","dict","addMark","text","replace","RegExp","match","formatVocab","formatDefination","console","log","reg","Array","apply","length","map","index","array","String","fromCharCode","join","filterPinyin","trim","addTitle","split","line","item","key","uuidv4","dangerouslySetInnerHTML","__html","罗马字","假名日语","汉字日语","中文解释","CheckInput","style","checked","backgroundColor","id","checkId","onChangeCallback","htmlFor","checkLabel","CheckSearchMethod","searchMethod","dispatchSearchMethod","checkTotal","checkPart","checkRegex","CheckSearchRange","searchRange","dispatchSearchRange","checkRangeAll","checkHiragana","checkKatagana","checkRomanji","checkChinese","Jisho","src","width","height","scrolling","frameBorder","title","onLoad","setTimeout","document","activeElement","contains","History","searchMethodInitialState","searchMethodReducer","state","action","Error","searchRangeInitialState","changeState","range","Object","entries","every","searchRangeReducer","App","useState","useRef","setDict","dictOutcome","setDictOutcome","jishoSrc","setJishoSrc","useReducer","searchByMethod","searchText","indexOf","jpDict","window","location","hash","o","filter","slice","onkeydown","keyCode","ctrlKey","useEffect","localforage","getItem","then","fetch","method","r","json","decodeURIComponent","setItem","catch","error","undefined","orientation","getElementById","encodeURIComponent","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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A,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,UACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,UACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,UACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,UACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,UACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,UACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,sBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAA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","file":"static/js/main.5f7e0d31.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function SearchForm({\r\n    searchValue,\r\n    setSearchValue,\r\n    inputEle,\r\n    startSearch,\r\n}) {\r\n    // useEffect(() => {\r\n\r\n    // });\r\n    // setInterval(() => {\r\n    //     if (\r\n    //         inputEle.current &&\r\n    //         !inputEle.current.contains(document.activeElement)\r\n    //     ) {\r\n    //         inputEle.current.focus();\r\n    //     }\r\n    // }, 100);\r\n\r\n    // const handlejishoBtnClick = () => {\r\n    //     window.open(\"https://jisho.org/search/\"+props.searchValue);\r\n    // }\r\n    return (\r\n        <div className=\"search_form_container\">\r\n\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"search_form_btn\"\r\n                    onClick={() => startSearch()}\r\n                >\r\n                    搜索\r\n                </button>\r\n                <input\r\n                    ref={inputEle}\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    className=\"search_form_text_input\"\r\n                    value={searchValue}\r\n                    onChange={(e) => setSearchValue(e.target.value)}\r\n                    placeholder=\"input search text\"\r\n                />\r\n                 <div className=\"history_btn\"></div>\r\n\r\n                <div\r\n                    className=\"search_form_text_input_clear\"\r\n                    onClick={() => {\r\n                        setSearchValue(\"\");\r\n                        if (inputEle.current) inputEle.current.focus();\r\n                    }}\r\n                >\r\n                    <div className=\"search_form_text_input_clear_item1\"></div>\r\n                    <div className=\"search_form_text_input_clear_item2\"></div>\r\n                </div>\r\n     \r\n           \r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport default function ResultStats(props) {\r\n    return (\r\n        <div className=\"result_stats_container\">\r\n            {props.outcome ? (\r\n                <React.Fragment>\r\n                    <p className=\"result_stats_normal\">从 </p>\r\n                    <p className=\"result_stats_strong\">{props.outcome.all}</p>\r\n                    <p className=\"result_stats_normal\"> 条数据中，搜索到 </p>\r\n                    <p className=\"result_stats_strong\">{props.outcome.hit}</p>\r\n                    <p className=\"result_stats_normal\"> 个结果</p>\r\n                </React.Fragment>\r\n            ) : (\r\n                <p className=\"result_stats_normal\">等待搜索...</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function ItemList({ dict, searchValue }) {\r\n    const addMark = (searchValue, text) => {\r\n        return text.replace(\r\n            new RegExp(searchValue, \"gi\"),\r\n            (match) => `<mark>${match}</mark>`\r\n        );\r\n    };\r\n    const addTitle = (text) => {\r\n        return text\r\n            .replace(\r\n                new RegExp(\"（\\\\d+）.*\", \"gi\"),\r\n                (match) => `\\n<b>${match}</b>`\r\n            )\r\n            .trim();\r\n    };\r\n\r\n    // 过滤 text 中所有拼音，直接用 unicode 段，比较粗\r\n    const filterPinyin = (text) => {\r\n        const reg = Array.apply(null, { length: 600 })\r\n            .map((value, index, array) => String.fromCharCode(index + 190))\r\n            .join(\"\");\r\n        return text.replace(new RegExp(\"[a-z┏\" + reg + \"]\", \"gi\"), \"\");\r\n    };\r\n\r\n    const formatVocab = (searchValue, text) => {\r\n        return addMark(searchValue, text);\r\n    };\r\n\r\n    const formatDefination = (searchValue, text) => {\r\n        console.log(text);\r\n        text = filterPinyin(text);\r\n        text = addMark(searchValue, text);\r\n        text = addTitle(text);\r\n\r\n        // 例句开头加 \\t\r\n        text = text.replace(/\\n\\$/g, \"\\n\\t\");\r\n\r\n        // 例句日汉翻译换行，例句间加空白\r\n        text = text\r\n            .split(/\\n/)\r\n            .map((line) => {\r\n                if (line.split(\"／\").length === 1) {\r\n                    return line;\r\n                } else {\r\n                    return line.split(\"／\").join(\"\\n\\t\");\r\n                }\r\n            })\r\n            .join(\"\\n\\n\");\r\n        return text;\r\n    };\r\n\r\n    return (\r\n        <ul className=\"dict_items\">\r\n            {dict && dict.map((item) => {\r\n                    return (\r\n                        <li className=\"dict_item\" key={uuidv4()}>\r\n                            <p\r\n                                className=\"dict_item_vocab\"\r\n                                dangerouslySetInnerHTML={{\r\n                                    __html: formatVocab(\r\n                                        searchValue,\r\n                                        item.罗马字 +\r\n                                            \"\\n\" +\r\n                                            item.假名日语 +\r\n                                            \"\\n\" +\r\n                                            item.汉字日语\r\n                                    ),\r\n                                }}\r\n                            ></p>\r\n                            <p\r\n                                className=\"dict_item_defination\"\r\n                                dangerouslySetInnerHTML={{\r\n                                    __html: formatDefination(\r\n                                        searchValue,\r\n                                        item.中文解释\r\n                                    ),\r\n                                }}\r\n                            ></p>\r\n                        </li>\r\n                    );\r\n                })}\r\n        </ul>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function CheckInput(props) {\r\n\r\n    let style;\r\n    if (props.checked){\r\n        style = {backgroundColor:\"lightgrey\"}\r\n    } else {\r\n        style = {backgroundColor:\"white\"}\r\n    }\r\n    return (\r\n        <div className=\"checkbox-input-div\" style={style}>\r\n            <input\r\n                type=\"checkbox\"\r\n                id={props.checkId}\r\n                checked={props.checked}\r\n                className=\"checkbox-input\"\r\n                onChange={props.onChangeCallback}\r\n            />\r\n            <label htmlFor={props.checkId} className=\"checkbox-label\">\r\n                {props.checkLabel}\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport CheckInput from \"./CheckInput/CheckInput\";\r\n\r\nexport default function CheckSearchMethod({searchMethod, dispatchSearchMethod}) {\r\n    return (\r\n        <div className=\"check-search-div\">\r\n            <div className=\"check-search-label\">搜索方法：</div>\r\n            <CheckInput\r\n                checkLabel=\"完全匹配\"\r\n                checkId=\"checkTotalId\"\r\n                checked={searchMethod.checkTotal}\r\n                onChangeCallback={() => dispatchSearchMethod(\"checkTotal\")}\r\n            />\r\n            <CheckInput\r\n                checkLabel=\"部分匹配\"\r\n                checkId=\"checkPartId\"\r\n                checked={searchMethod.checkPart}\r\n                onChangeCallback={() => dispatchSearchMethod(\"checkPart\")}\r\n            />\r\n            <CheckInput\r\n                checkLabel=\"正则匹配\"\r\n                checkId=\"checkRegexId\"\r\n                checked={searchMethod.checkRegex}\r\n                onChangeCallback={() => dispatchSearchMethod(\"checkRegex\")}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nimport CheckInput from \"./CheckInput/CheckInput\";\r\n\r\nexport default function CheckSearchRange({ searchRange, dispatchSearchRange }) {\r\n    return (\r\n        <div className=\"check-search-div\">\r\n            <div className=\"check-search-label\">搜索范围：</div>\r\n            <CheckInput\r\n                checkLabel=\"全部\"\r\n                checkId=\"checkAllId\"\r\n                checked={searchRange.checkRangeAll}\r\n                onChangeCallback={() => dispatchSearchRange(\"checkRangeAll\")}\r\n            />\r\n\r\n            <CheckInput\r\n                checkLabel=\"假名\"\r\n                checkId=\"checkHiraganaId\"\r\n                checked={searchRange.checkHiragana}\r\n                onChangeCallback={() => dispatchSearchRange(\"checkHiragana\")}\r\n            />\r\n\r\n            <CheckInput\r\n                checkLabel=\"汉字\"\r\n                checkId=\"checkKataganaId\"\r\n                checked={searchRange.checkKatagana}\r\n                onChangeCallback={() => dispatchSearchRange(\"checkKatagana\")}\r\n            />\r\n\r\n            <CheckInput\r\n                checkLabel=\"罗马字\"\r\n                checkId=\"checkRomanjiId\"\r\n                checked={searchRange.checkRomanji}\r\n                onChangeCallback={() => dispatchSearchRange(\"checkRomanji\")}\r\n            />\r\n\r\n            <CheckInput\r\n                checkLabel=\"中文含义\"\r\n                checkId=\"checkChineseId\"\r\n                checked={searchRange.checkChinese}\r\n                onChangeCallback={() => dispatchSearchRange(\"checkChinese\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Jisho({ src, inputEle }) {\r\n    return (\r\n        <iframe\r\n            src={src}\r\n            name=\"jisho\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            scrolling=\"auto\"\r\n            frameBorder=\"no\"\r\n            title=\"jisho\"\r\n            onLoad={() => {\r\n                setTimeout(() => {\r\n                    if (\r\n                        inputEle.current &&\r\n                        !document.activeElement.contains(inputEle.current)\r\n                    )\r\n                        inputEle.current.focus();\r\n                },2000)\r\n     \r\n            }}\r\n        ></iframe>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function History() {\r\n    return (\r\n        <div className=\"history_container\">\r\n            <p className=\"history_item\">味</p>\r\n            <p className=\"history_item\">秋葉原</p>\r\n            <p className=\"history_item\">美術館</p>\r\n            <p className=\"history_item\">体重</p>\r\n            <p className=\"history_item\">薬代</p>\r\n            <p className=\"history_item\">名調子</p>\r\n            <p className=\"history_item\">ぐらい</p>\r\n            <p className=\"history_item\">電気が</p>\r\n            <p className=\"history_item\">味</p>\r\n            <p className=\"history_item\">秋葉原</p>\r\n            <p className=\"history_item\">美術館</p>\r\n            <p className=\"history_item\">体重</p>\r\n            <p className=\"history_item\">薬代</p>\r\n            <p className=\"history_item\">名調子</p>\r\n            <p className=\"history_item\">ぐらい</p>\r\n            <p className=\"history_item\">電気が</p>\r\n            <p className=\"history_item\">味</p>\r\n            <p className=\"history_item\">秋葉原</p>\r\n            <p className=\"history_item\">美術館</p>\r\n            <p className=\"history_item\">体重</p>\r\n            <p className=\"history_item\">薬代</p>\r\n            <p className=\"history_item\">名調子</p>\r\n            <p className=\"history_item\">ぐらい</p>\r\n            <p className=\"history_item\">電気が</p>\r\n            <p className=\"history_item\">味</p>\r\n            <p className=\"history_item\">秋葉原</p>\r\n            <p className=\"history_item\">美術館</p>\r\n            <p className=\"history_item\">体重</p>\r\n            <p className=\"history_item\">薬代</p>\r\n            <p className=\"history_item\">名調子</p>\r\n            <p className=\"history_item\">ぐらい</p>\r\n            <p className=\"history_item\">電気が</p>\r\n            <p className=\"history_item\">味</p>\r\n            <p className=\"history_item\">秋葉原</p>\r\n            <p className=\"history_item\">美術館</p>\r\n            <p className=\"history_item\">体重</p>\r\n            <p className=\"history_item\">薬代</p>\r\n            <p className=\"history_item\">名調子</p>\r\n            <p className=\"history_item\">ぐらい</p>\r\n            <p className=\"history_item\">電気が</p>\r\n            <p className=\"history_item\">味</p>\r\n            <p className=\"history_item\">秋葉原</p>\r\n            <p className=\"history_item\">美術館</p>\r\n            <p className=\"history_item\">体重</p>\r\n            <p className=\"history_item\">薬代</p>\r\n            <p className=\"history_item\">名調子</p>\r\n            <p className=\"history_item\">ぐらい</p>\r\n            <p className=\"history_item\">電気が</p>\r\n            <p className=\"history_item\">味</p>\r\n            <p className=\"history_item\">秋葉原</p>\r\n            <p className=\"history_item\">美術館</p>\r\n            <p className=\"history_item\">体重</p>\r\n            <p className=\"history_item\">薬代</p>\r\n            <p className=\"history_item\">名調子</p>\r\n            <p className=\"history_item\">ぐらい</p>\r\n            <p className=\"history_item\">電気が</p>\r\n            <p className=\"history_item\">味</p>\r\n            <p className=\"history_item\">秋葉原</p>\r\n            <p className=\"history_item\">美術館</p>\r\n            <p className=\"history_item\">体重</p>\r\n            <p className=\"history_item\">薬代</p>\r\n            <p className=\"history_item\">名調子</p>\r\n            <p className=\"history_item\">ぐらい</p>\r\n            <p className=\"history_item\">電気が</p>\r\n            <p className=\"history_item\">味</p>\r\n            <p className=\"history_item\">秋葉原</p>\r\n            <p className=\"history_item\">美術館</p>\r\n            <p className=\"history_item\">体重</p>\r\n            <p className=\"history_item\">薬代</p>\r\n            <p className=\"history_item\">名調子</p>\r\n            <p className=\"history_item\">ぐらい</p>\r\n            <p className=\"history_item\">電気が</p>\r\n            <p className=\"history_item\">味</p>\r\n            <p className=\"history_item\">秋葉原</p>\r\n            <p className=\"history_item\">美術館</p>\r\n            <p className=\"history_item\">体重</p>\r\n            <p className=\"history_item\">薬代</p>\r\n            <p className=\"history_item\">名調子</p>\r\n            <p className=\"history_item\">ぐらい</p>\r\n            <p className=\"history_item\">電気が</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\nexport const searchMethodInitialState = {\r\n    checkTotal: true,\r\n    checkPart: false,\r\n    checkRegex: false,\r\n};\r\nexport const searchMethodReducer = (state, action) => {\r\n    switch (action) {\r\n        case \"checkTotal\":\r\n            return {\r\n                checkTotal: true,\r\n                checkPart: false,\r\n                checkRegex: false,\r\n            };\r\n        case \"checkPart\":\r\n            return {\r\n                checkTotal: false,\r\n                checkPart: true,\r\n                checkRegex: false,\r\n            };\r\n        case \"checkRegex\":\r\n            return {\r\n                checkTotal: false,\r\n                checkPart: false,\r\n                checkRegex: true,\r\n            };\r\n        default:\r\n            throw new Error(\"Unexpected action\");\r\n    }\r\n};\r\n\r\n\r\n\r\n","export const searchRangeInitialState = {\r\n    checkRangeAll: true,\r\n    checkHiragana: true,\r\n    checkKatagana: true,\r\n    checkRomanji: true,\r\n    checkChinese: true,\r\n};\r\nconst changeState = (range, state) => {\r\n    if (state[range]) {\r\n        return {\r\n            ...state,\r\n            checkRangeAll: false,\r\n            [range]: false,\r\n        };\r\n    } else {\r\n        if (\r\n            Object.entries(state).every(([key, value]) => {\r\n                if (key === range) return true;\r\n                else if (key === \"checkRangeAll\") return true;\r\n                else return value;\r\n            })\r\n        )\r\n            return {\r\n                ...state,\r\n                checkRangeAll: true,\r\n                [range]: true,\r\n            };\r\n        else\r\n            return {\r\n                ...state,\r\n                checkRangeAll: false,\r\n                [range]: true,\r\n            };\r\n    }\r\n};\r\nexport const searchRangeReducer = (state, action) => {\r\n    switch (action) {\r\n        case \"checkRangeAll\":\r\n            if (state.checkRangeAll) {\r\n                return {\r\n                    checkRangeAll: false,\r\n                    checkHiragana: false,\r\n                    checkKatagana: false,\r\n                    checkRomanji: false,\r\n                    checkChinese: false,\r\n                };\r\n            } else {\r\n                return {\r\n                    checkRangeAll: true,\r\n                    checkHiragana: true,\r\n                    checkKatagana: true,\r\n                    checkRomanji: true,\r\n                    checkChinese: true,\r\n                };\r\n            }\r\n        case \"checkHiragana\":\r\n            return changeState(\"checkHiragana\", state);\r\n        case \"checkKatagana\":\r\n            return changeState(\"checkKatagana\", state);\r\n        case \"checkRomanji\":\r\n            return changeState(\"checkRomanji\", state);\r\n        case \"checkChinese\":\r\n            return changeState(\"checkChinese\", state);\r\n        default:\r\n            throw new Error(\"Unexpected action\");\r\n    }\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useReducer } from \"react\";\n\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport localforage from \"localforage\";\n\nimport SearchForm from \"./components/SearchForm/SearchForm\";\nimport \"./components/SearchForm/SearchForm.css\";\n\nimport ResultStats from \"./components/ResultStats/ResultStats\";\nimport \"./components/ResultStats/ResultStats.css\";\n\nimport ItemList from \"./components/ItemList/ItemList\";\nimport \"./components/ItemList/ItemList.css\";\n\nimport CheckSearchMethod from \"./components/CheckSearch/CheckSearchMethod\";\nimport CheckSearchRange from \"./components/CheckSearch/CheckSearchRange\";\nimport \"./components/CheckSearch/CheckSearch.css\";\nimport \"./components/CheckSearch/CheckInput/CheckInput.css\";\n\nimport Jisho from \"./components/Jisho/Jisho\";\n\nimport History from \"./components/History/History\";\nimport \"./components/History/History.css\";\n\nimport {\n    searchMethodInitialState,\n    searchMethodReducer,\n} from \"./reducers/searchMethodReducer\";\nimport {\n    searchRangeInitialState,\n    searchRangeReducer,\n} from \"./reducers/searchRangeReducer\";\n\nfunction App() {\n    const [searchValue, setSearchValue] = useState(\"\");\n    const inputEle = useRef(null);\n    const [dict, setDict] = useState([]);\n    const [dictOutcome, setDictOutcome] = useState([]);\n    const [jishoSrc, setJishoSrc] = useState(\"\");\n\n    const [searchRange, dispatchSearchRange] = useReducer(\n        searchRangeReducer,\n        searchRangeInitialState\n    );\n    const [searchMethod, dispatchSearchMethod] = useReducer(\n        searchMethodReducer,\n        searchMethodInitialState\n    );\n\n    // const setValueByHash = () => {\n    //     setSearchValue(decodeURIComponent(window.location.hash.slice(1)));\n    // };\n\n    const searchByMethod = (searchValue, searchText) => {\n        if (searchMethod.checkTotal) {\n            if (searchValue === searchText) {\n                console.log(888, searchValue, searchText);\n                return true;\n            } else return false;\n        } else if (searchMethod.checkPart) {\n            if (searchValue.indexOf(searchText) !== -1) return true;\n            else if (searchText.indexOf(searchValue) !== -1) return true;\n            else return false;\n        } else if (searchMethod.checkRegex) {\n            if (searchText.match(new RegExp(searchValue)) !== null) return true;\n            else return false;\n        } else {\n            return false;\n        }\n    };\n\n    const startSearch = (value, jpDict) => {\n        if (!value) value = searchValue;\n        if (!jpDict) jpDict = dict;\n\n        setJishoSrc(value);\n        window.location.hash = value;\n\n        if (value === \"\") return [];\n\n        const o = jpDict.filter((item) => {\n            return (\n                (searchRange.checkHiragana &&\n                    searchByMethod(value, item.假名日语)) ||\n                (searchRange.checkKatagana &&\n                    searchByMethod(value, item.汉字日语)) ||\n                (searchRange.checkRomanji &&\n                    searchByMethod(value, item.罗马字)) ||\n                (searchRange.checkChinese &&\n                    searchMethod.checkTotal &&\n                    searchByMethod(value, item.中文解释)) ||\n                (searchRange.checkChinese &&\n                    (searchMethod.checkPart || searchMethod.checkRegex) &&\n                    searchByMethod(value, item.中文解释))\n            );\n        });\n        // 先展示 100 结果\n        setDictOutcome(o.slice(0, 100));\n    };\n\n    // window.addEventListener(\"hashchange\", () => {\n    //     console.log(222, \"hashchange\");\n    //     const hash = decodeURIComponent(window.location.hash.slice(1));\n    //     setSearchValue(hash);\n    //     startSearch(hash);\n    // });\n    document.onkeydown = (e) => {\n        // console.log(e.keyCode);\n        if ((e.keyCode === 8 && e.ctrlKey) || e.keyCode === 27) {\n            if (inputEle.current) inputEle.current.focus();\n            setSearchValue(\"\");\n        }\n        if (e.keyCode === 13) startSearch();\n    };\n\n    useEffect(() => {\n        localforage\n            .getItem(\"dict\")\n            .then((value) => {\n                if (value === null) {\n                    fetch(\"/jp2chn.json\", {\n                        method: \"GET\",\n                    })\n                        .then((r) => r.json())\n                        .then((r) => {\n                            console.log(\"dict downloaded success\");\n                            setDict(r);\n\n                            const hash = decodeURIComponent(\n                                window.location.hash.slice(1)\n                            );\n                            // console.log(hash);\n                            setSearchValue(hash);\n                            startSearch(hash, r);\n\n                            localforage\n                                .setItem(\"dict\", r)\n                                .then(() => console.log(\"dict saved success.\"))\n                                .catch((error) =>\n                                    console.log(\"dict saved fail.\", error)\n                                );\n                        })\n                        .catch((error) =>\n                            console.log(\"dict downloaded and saved fail\", error)\n                        );\n                } else {\n                    console.log(\"dict loaded success.\");\n\n                    setDict(value);\n                    const hash = decodeURIComponent(\n                        window.location.hash.slice(1)\n                    );\n                    // console.log(hash);\n                    setSearchValue(hash);\n                    startSearch(hash, value);\n                }\n            })\n            .catch((error) => {\n                console.log(\"dict loaded failed.\", error);\n            });\n\n        // set mobile\n        if (window.orientation !== undefined) {\n            document.getElementById(\"root\").style.height = \"85vh\";\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            <SearchForm\n                searchValue={searchValue}\n                setSearchValue={setSearchValue}\n                startSearch={startSearch}\n                inputEle={inputEle}\n            ></SearchForm>\n\n            <div className=\"dict_container\">\n                <ResultStats\n                    outcome={{ all: dict.length, hit: dictOutcome.length }}\n                />\n                <CheckSearchMethod\n                    searchMethod={searchMethod}\n                    dispatchSearchMethod={dispatchSearchMethod}\n                />\n                <CheckSearchRange\n                    searchRange={searchRange}\n                    dispatchSearchRange={dispatchSearchRange}\n                />\n                <ItemList dict={dictOutcome} searchValue={searchValue} />\n            </div>\n            <div className=\"jisho_container\">\n                <Jisho\n                    src={\n                        \"https://jisho.org/search/\" +\n                        encodeURIComponent(jishoSrc)\n                    }\n                    inputEle={inputEle}\n                />\n            </div>\n            <History />\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n// import { Server } from \"miragejs\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\n// new Server({\n//     routes() {\n//         this.namespace = \"dict\";\n\n//         this.post(\"/\", () => {\n//             return [\n//                 {\n//                     汉字日语: \"三次元\",\n//                     罗马字: \"sannjigenn\",\n//                     假名日语: \"さんじげん\",\n//                     中文解释:\n//                         \"（长cháng、宽kuān、高gāo）三次元sāncìyuán,三度sāndù.\\n$三次元の世界／三次元的世界; 立体lìtǐ的世界.\\n$三次元映画／立体电影.\",\n//                 },\n//                 {\n//                     汉字日语: \"隅玉縁\",\n//                     罗马字: \"sumitamabuti\",\n//                     假名日语: \"すみたまぶち\",\n//                     中文解释:\n//                         \"〈建〉角隅〔弯曲处〕的美丽饰边jiǎoyú〔wānqūchù〕 de měilì shìbiān.\",\n//                 },\n//             ];\n//         });\n//     },\n// });\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}